openapi: "3.0.2"
info:
  title: Fjord Control API - Analytics/GetDecimatedTimeseries
  version: '1.3'
  description: Endpoint for retireving downsampled timeseries data within a period of time 
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/TTH_1/DecimatedTimeSeries/1.3
  - url: https://api.fjordcontrol.no/v2
paths:
  /Analytics/GetDecimatedTimeseries:
    post:
      summary: Get decimated data points.
      description: >
        Get an array of decimated and sorted data points given temporal constraints and a decimation policy.
      requestBody:
        description: >
          ### Purpose
          
          Given a pixel space on a user device,
          a frontend developers must be able to ask for a decimated (downsampled) set of data points
          with the purpose of rendering a timeseries graph that makes good use of the available pixel space.

          ### Glossary
           * *Time Window* - Time interval that include the bulk of requested measurement data.
           * *Time Slot* - Time windows are sub-divided into time slots of equal time durations.
           * *Raw data point* - Unprocessed data point read from the database.
           * *Leading value* - Value of last seen raw data point before a given time interval. The time interval may be a time window or a time slot. Leading values do not always exist in the data sets. Not all decimation policies make use of leading values.
           * *Last value* - Often used to describe the last raw data point in a time slot. Last value can become leading value in the next time slot. Last value for a time slot does not exist if the time slot has no raw data points.
           * *Decimation policy* - Algorithm that downsamples raw data to a single or a few data points. Simple decimation policies are generally applied on each time slot in isolation. Advanced decimation policy may require leading values.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DecimatedTimeseriesFilter'
      responses:
        200:
          description: OK - Request fullfilled and decimated timeseries is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DecimatedTimeseries'
        403: 
          description: >
            Forbidden - May be caused by
             * Bearer token not approved.
             * Result exceeds allowed limit of `4000` data points for any requested decimation policy.
        422: 
          description: >
            Unprocessable Entity - Failed to process at least one of the timeseries filters.
            Returns a text string that hints to the problem.
        500:
          description: >
            Internal Server Error - Returns a text string that hints to problem
components:
  schemas:
    Timestamp:
      description: Timestamp associated with some event or data point
      type: string
      format: ISO 8601 UTC
    Value:
      description: >
        Representes some measured value or perhaps some computed data point.
        The float value must be encoded according to the semantics of the timeseries.
         * 'bool' - represented by 0 and 1 with or without decimal '.0'.
         * 'int' - represented without decimals or with decimal '.0'.
         * 'float' - represented with or without decimals.   
      type: number
      format: float
    TimestampedValues:
      description: >
        Contains measurement values sorted by timestamps.
        Measurements are represented by a Timestamps array and a Values array, both that are of equal length.
      type: object
      properties:
        ActualCount:
          description: >
            1. The ActualCount is the number of data points that are returned. 
            2. The length of the Timestamps array and the Values array must both be of this length.
            3. Data points consist of
               - Data extracted from the time slots by applying the decimation policy.
               - An additional leading data point, the last before the time window, if it exists.
          type: number
          format: int
        Timestamps:
          type: array
          items:
            $ref: '#/components/schemas/Timestamp'
        Values:
          type: array
          items:
            $ref: '#/components/schemas/Value'
      required:
      - ActualCount
      - Timestamps
      - Values            
    DecimatedTimeseries:
      description: Contains the result of the decimation process.
      type: object
      properties:
        Constraints:
          allOf:
          - description: >
              Contains the decimation constraints that were actually used to compute the decimated timeseries.
              These constraints are normally a copy of the constraints given in DecimatedTimeseriesFilter but
              may have been adjusted for computational preferences. 
          - $ref: '#/components/schemas/TemporalConstraints'
        Selectors:
          description: Array of timeseries selectors identifying the decimated timeseries 
          type: array
          items:
            $ref: '#/components/schemas/TimeseriesSelector'
        Results:
          description: >
            Decimated timeseries computed from associated decimation constrains.
            It sorted in same order as the timeseries selectors
          type: array
          items:
            $ref: '#/components/schemas/TimestampedValues'  
      required:
      - Constraints
      - Selectors
      - Results         
    DecimatedTimeseriesFilter:
      description: Filter specification for decimated timeseries 
      type: object
      properties:
        Constraints:
          $ref: '#/components/schemas/TemporalConstraints'
        Selectors:
          description: Array of timeseries selectors
          type: array
          items:
            $ref: '#/components/schemas/TimeseriesSelector'
      required:
      - Constraints
      - Selectors
    TemporalConstraints:
      description: >
        Temporal constraints for decimated timeseries.
        The constraints are defined in terms of a time window and a number of time slots.
        The window size is defined as the difference between DateFrom and DateTo.
        The slot size is defined as the quotient from dividing the window size by the slot count.
        The decimation algorithm may snap window and slots to some temporal alignment for computational preferences.
        The snap must not be larger then half a time slot.
        The snap must not result in more than requested slot count to be created.
        The snap may result in a slight reduction in the slot count.
      type: object
      properties:
        DateFrom:
          description: >
            Inclusive (>=) start time of requested timeseries.
            The decimation algorithm may snap the DateFrom time to some temporal alignment for computational preferences.
          type: string
          format: ISO 8601 UTC
        DateTo:
          description: >
            Inclusive (<=) end time of requested timeseries
            The decimation algorithm may snap the DateTo time to some temporal alignment for computational preferences.
            The snap must not be an earlier time than the original DateTo value.
          type: string
          format: ISO 8601 UTC
        SlotCount:
          description: >
            The number of time slots to divide timeseries into.
            Usually corresponds to max number of data points to return although
            this depends on the decimation policy.
            E.g; `extr` policy returns two values per slot if those exists.
            The decimation algorithm may slightly reduce the slot count for computational preferences.
          type: number
        SortOrder:
          description: >
            How to sort the decimated timeseries
             * `0: asc` - Sort by ascending timestamp
             * `1: desc` - Sort by descending timestamp
          type: number
      required:
      - DateFrom
      - DateTo
      - SlotCount
      - SortOrder
    DeviceType:
      description: >
        Byte enumeration identifying device type. 
         * `0: Battery`
         * `1: Engine`
         * `2: Pms`
         * `3: DoorSwitch`
         * `4: Generator`
         * `5: GeneratorControl`
         * `6: Mains`
         * `7: RoomSensor`
         * `8: Transformer`
         * `9: Vessel`
         * `10: CoolingSystem`
         * `11: Propulsion`
         * `12: Charger`
         * `13: DcDc`
         * `15: Sterndrive`
         * `16: Manouver`
         * `17: Busbar`
      type: number
      format: byte
    TimeseriesSelector:
      description: Specification identifying a single timeserie 
      type: object
      properties:
        DeviceId:
          description: Short int identifying real world device of given "DeviceType"
          type: number
          format: short
        DeviceType:
          $ref: '#/components/schemas/DeviceType'
        MeasurementId:
          description: Identifier of measurement.
          type: number
        DecimationPolicy:
          description: >
            ### Purpose
            
            Decimation policies define how values are sampled from the time window and time slots.
            
            ### General policies
             * The service providing the decimated data may adjust the request parameters for computational preferences.
             * Repetitive requests with the same request parameters must yield the same result.
             * Results must not be biased to any given time zone. 
             * Returned data points are always sorted by time.
             * Leading value before time window is always returned, if it exists.
             * No time slot value is computed or selected if no value exists within the time slot.
             * All returned values are accompanied with a computed or selected timestamp.
             * Leading values are used in some policies but not all. The policies must be flexible enought to handle absent leading values.
             * The request will be rejected if it is estimated that number of returned data points for any policy, will exceed allowed limit (se error code 403 above).
             
            ### Specific policies
             * `0: min` - Selects minimum value within time slot. 
             * `1: max` - Selects maximum value within time slot.
             * `2: umeanl` - Returns merged values from `mean` and `last` policies but removes data points with duplicate timestamps (unique).             
             * `3: extr` - Selects minimum and maximum values (extremals) within each time slot. In general two values are returned for each time slot. Less if raw data do not exists.
             * `4: last` - Selects last datapoint within time slot.
             * `5: mean` - Calculates mean value from all values within time slot. Does not include leading values.

             
             ### Rules for `mean`
              Returns mean value for all values within time slot.
               * Returns mean timestamp for all timestamps within time slot.
               * Returns existing value and timestamp when only one data point exist in the time slot.
               * Returns no data point when the time slot is empty.
               
             ### Rules umeanl
             Returns unique merge of data points from `main` and `last` policies.
               * Generally returns 2 data points for each timeslot. That is the mean data point and the last data point for each time slot.
               * Returns only existing data point when only one data point exist in the time slot. This rule ensures that only unique data points are returned from the merge. The assumption here is that the `mean` policy will return data points identical to `last` policy for time slots with only one value.
               * Returns no data points when the time slot is empty.
                

          type: number
          format: int
      required:
      - DeviceId
      - DeviceType
      - MeasurementId
      - DecimationPolicy