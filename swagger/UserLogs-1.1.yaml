openapi: 3.0.0
info:
  title: DRAFT 1.1  *** Fjord Control - User Logs
  description: >
    User logs is a timeseries of records tracking user presence. Users may be Customer employees, Fjord Control OMS employees, or Fjord Maritime technical personell. The tracked information is:
     * Timestamp - When the record was added
     * UserId - The user; owner of the record
     * Availability - Whether or not user is available for contact
     * Presence - Whereabouts of the user
     * Comment - Some text adding context to log entry
     * Site - Current site location if applicable
     * Office - Current office location if applicable
  version: '1.1'
paths:
  /UserLogs/CreateRecord:
    post:
      summary: Appends a record to the user log.
      description: >
        Appends a record in the user log.
         * Timestamp from input record is ignored by the server and can be null. Server will insert timestamp from request arrival time.
      security:
        - BearerAuth: []
        - Claims: [ userlogs_append_owned, userlogs_append_any]
      requestBody:
        description: Data for the log record. Timestamp is omitted.
        required: true
        content:
          application/json:
            schema:
                oneOf:
                - $ref: '#/components/schemas/UserLogRecord'
      responses:
        201:
          description: Created - Request fullfilled and the record is returned with assigned timestamp.
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/UserLogRecord'
        403: 
          description: >
            * Forbidden - Bearer token not approved.
            * Forbidden - Claims validation failed.
        422: 
          description: >
            Unprocessable Entity - Failed to parse incoming record.
        500:
          description: >
            Internal Server Error - Returns a text string that hints to the problem.
  /UserLogs/GetRecords:
    post:
      summary: Returns user logs for specified users within a time window.
      description: >
        Returns user logs for specified users within a time window.
        * Fails if any of the UserId are outside claims. 
      security:
        - BearerAuth: []
        - Claims: [ userlogs_read_owned, userlogs_read_all, userlogs_read_oms, userlogs_read_company ]        
      requestBody:
        description: User logs filter.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogFilter'
      responses:
        200:
          description: OK - Request fullfilled and filtered user log records are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogCollection'
        403: 
          description: >
            * Forbidden - Bearer token not approved.
            * Forbidden - Claims validation failed.
        422: 
          description: >
            Unprocessable Entity - Failed to parse the user log filter.
        500:
          description: Internal Server Error - Returns a text string that hints to problem
  /UserLogs/GetMyLatestRecord:
    get:
      summary: >
        Get the latest logs of the calling user.
      description: >
        Get the latest logs of the calling user.
         * For any user to read latest presence record of herself.
         * UserId is extracted from bearer token.
      parameters:
      - in: header
        name: token
        description: Token user id defining owner of log record.
        required: true
        schema:
          type: integer
      security:
        - BearerAuth: []
        - Claims: [ userlogs_read_owned ]
      responses:
        200:
          description: OK - Request fullfilled and filtered user log record is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogRecord'
        403: 
          description: >
            * Forbidden - Bearer token not approved.
            * Forbidden - Claims validation failed.
        422: 
          description: >
            Unprocessable Entity - Failed to parse the user log filter.
        500:
          description: Internal Server Error - Returns a text string that hints to problem
  /UserLogs/GetLatestCompanyRecords/{CompanyId}:
    get:
      summary: >
        Get the latest logs of all comppany users.
      description: >
        Get the latest logs of all comppany users.
         * For user to see presence of fellow employees in same company.
         * For OMS user to see precense of staff in a company.
      parameters:
      - in: path
        name: CompanyId
        description: Identifier of company which users belong
        required: true
        schema:
          type: integer
      security:
        - BearerAuth: []
        - Claims: [ userlogs_read_company, userlogs_read_all ]
      responses:
        200:
          description: OK - Request fullfilled and filtered user log recordss are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogCollection'
        403: 
          description: >
            * Forbidden - Bearer token not approved.
            * Forbidden - Claims validation failed.
        422: 
          description: >
            Unprocessable Entity - Failed to parse the user log filter.
        500:
          description: Internal Server Error - Returns a text string that hints to problem
  /UserLogs/GetLatestOmsRecords:
    get:
      summary: >
        Get the latest logs of all OMS users.
      description: >
        Get the latest logs of all OMS users.
         * For user to see presence of OMS staff.
      security:
        - BearerAuth: []
        - Claims: [ userlogs_read_oms ]
      responses:
        200:
          description: OK - Request fullfilled and filtered user log recordss are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogCollection'
        403: 
          description: >
            * Forbidden - Bearer token not approved.
            * Forbidden - Claims validation failed.
        422: 
          description: >
            Unprocessable Entity - Failed to parse the user log filter.
        500:
          description: >
            Internal Server Error - Returns a text string that hints to problem
components:
  schemas:
    UserLogRecord:
      description: Log record decribing presence of user
      type: object
      properties:
        UserId:
          description: User identifier. Owner of log record.
          allOf:
          - $ref: '#/components/schemas/UserId'
        Timestamp:
          description: Timestamp created by server
          allOf:
          - $ref: '#/components/schemas/Timestamp'
        Available:
          description: Flag indicating if user is availabile for communication
          allOf:
          - $ref: '#/components/schemas/AvailableValue' 
        Presence:
          description: Code indicating type of presence
          allOf:
          - $ref: '#/components/schemas/PresenceValue'
        Comment:
          description: Comment giving context to log entry
          allOf:
          - $ref: '#/components/schemas/CommentValue'
        Location:
          description: Identifier of site or office
          allOf:
          - $ref: '#/components/schemas/LocationValue'
        LocationType:
          description: Code indicating location type; site or office
          allOf:
          - $ref: '#/components/schemas/LocationTypeValue'
      required:
      - UserId
      - Timestamp
      - Available
      - Presence
      - Comment
      - Location
      - LocationType
    UserLogCollection:
      type: object
      description: >
        Response from request asking for log records
      properties:
        UserIds:
          description: User ids for each log record
          type: array
          items: 
            $ref: '#/components/schemas/UserId'
        Timestamps:
          type: array
          description: Timestamps for each log record
          items: 
            $ref: '#/components/schemas/Timestamp'
        Availables:
          description: Availability status for each log record
          type: array
          items: 
            $ref: '#/components/schemas/AvailableValue'
        Presences:
          description: Presence status for each log record
          type: array
          items:
            $ref: '#/components/schemas/PresenceValue'
        Comments:
          description: Comments for each log record
          type: array
          items:
            $ref: '#/components/schemas/CommentValue'
        Locations:
          description: Locations for each log record
          type: array
          items:
            $ref: '#/components/schemas/LocationValue'
        LocationTypes:
          description: Location types for each log record
          type: array
          items:
            $ref: '#/components/schemas/LocationTypeValue'
      required:
      - UserIds
      - Timestamps
      - Availables
      - Presences
      - Comments
      - Locations
      - LocationTypes
    UserLogFilter:
      type: object
      properties:
        UserIds:
          description: A set of user ids for which to return logs
          type: array
          items:
            $ref: '#/components/schemas/UserId'
        TimeFrom:
          description: Inclusive (>=) start time of requested records
          allOf:
          - $ref: '#/components/schemas/Timestamp'
        TimeTo:
          description: Inclusive (<=) end time of requested records
          allOf:
          - $ref: '#/components/schemas/Timestamp'
      required:
      - UserIds
      - TimeFrom
      - TimeTo
    UserId:
      description: Number identifying user.
      type: number
      format: int
    Timestamp:
      description: Timestamp associated with some event or data point
      type: string
      format: ISO 8601 UTC
    AvailableValue:
      description: >
        Boolean indication availability for contact
         * `true` - Is available for contact
         * `false` - Is not avaliable for contact.
      type: boolean
    PresenceValue:
      description: >
        Enumerator indicating precense
         * `0: Absent`
         * `1: Present`
         * `2: Remote`
         * `3: Vacation`
         * `4: Sick`
         * `5: OnLeave`
      type: number
      format: int
    CommentValue:
      description: Short comment text.
      type: string
      format: char(300)      
    LocationValue:
      description: >
        Identifier of current location. One of:
         * Entity id
         * Office id (for future use)
      type: number
      format: int
    LocationTypeValue:
      description: >
        Type identifier indicating if location is site or office. One of:
         * `0 - Entity`
         * `1 - Office` (for future use)
      type: number
      format: int
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
    Claims:
      type: oauth2
      description: >
        Fake oauth2 specification used to model expected Fjord Control authorization.
      flows:
        authorizationCode:
          authorizationUrl: fake.spec
          tokenUrl: fake.spec
          scopes:
            userlogs_append_owned: >
              Grants access to append records, if:
               * Log UserId matches token user id.
            userlogs_append_any: >
              Grants access to append records, if:
               * Token user id is member of group "FjordControlOMS".
            userlogs_read_owned: >
              Grants access to read records, if
               * Log UserId matches token user id.
            userlogs_read_company: >
              Grants access to read records, if
               * Log UserId is in same company as token user id.
            userlogs_read_oms: >
              Grants read access to records, if:
               * UserId in log is meber of group "FjordControlOMS".
            userlogs_read_all: >
              Grants read access to records, if:
               * Token user id is meber of group "FjordControlOMS".