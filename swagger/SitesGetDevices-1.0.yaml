openapi: 3.0.0
info:
  version: '1.0'
  title: Fjord Control - Sites/GetDevices
  description: Endpoint for getting a list of devices for a site
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/TTH_1/GetDevices/1.0
  - description: Fjord Control production API
    url: https://api.fjordcontrol.com/v2

paths:
  /Sites/GetDevices/{siteId}:
    get:
      summary: Get an array of all devices available at the specified site.
      description: >
        Get an array of all devices available at the specified site. The caller must have access to the site according to user claims.
      parameters:
      - in: path
        name: siteId
        schema:
          type: integer
        required: true
        description: The id of the site to list devices for
      responses:
        200:
          description: OK - Request fullfilled and a list of devices are returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DevicesResponse'
        403: 
          description: Forbidden
        500:
          description: Internal Server Error - Returns a text string that hints to problem
components:
  schemas:
    DevicesResponse:
      description: Collection of devices that are available on the site
      type: object
      properties:
        Devices:
          description: Array of device objects
          type: array
          items:
            $ref: '#/components/schemas/Device'
    Device:
      description: Information about a device entity
      type: object
      properties:
        Id:
          description: Device id. Used for SignalR subscriptions.
          type: number
          format: int
        Name:
          description: Name of the device for display purposes
          type: string
        Type:
          description: Type of device
          type: string
        DeviceTypeNo:
          $ref: '#/components/schemas/DeviceType'
        Measurements:
          description: Available measurements for the device
          type: array
          items: 
            $ref: '#/components/schemas/Measurement'
    Measurement:
      description: Information about a Measurement
      type: object
      properties:
        Id:
          description: Measurement Id
          type: number
          format: int
        Name:
          description: Name of measurement
          type: string
        DataType:
          $ref: '#/components/schemas/DataType'
        MeasurementModel:
          $ref: '#/components/schemas/SensorModel'
          
    SensorModel:
      nullable: true
      description: Specification for the measurement
      type: object
      properties:
        Unit:
          description: Measurement unit ex. % Voltage ...
          type: string
        MinValue:
          description: Minimum value of the measurement for UI purposes
          type: number
          format: float
        MaxValue: 
          description: Maximum value of the measurement for UI purposes
          type: number
          format: float
        Precision:
          description: The precision of the measurement value ex. 0.1 => 1 decimal
          type: number
          format: float
    OperatingMode:
      type: number
      format: byte
      enum:
        - 0
        - 1
        - 2
      description: >
          * 0 - Auto

          * 1 - Manual

          * 2 - Stop
    KeySwitchPosition:
      type: number
      format: byte
      enum:
        - 0
        - 1
        - 2
      description: >
          * 0 - Auto

          * 1 - Intermediate

          * 2 - Manual
    DataType:
      type: number
      format: byte
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      description: >
          * 0 - Boolean

          * 1 - Integer

          * 2 - Decimal

          * 3 - String 

          * 4 - OperatingMode (See spec) 

          * 5 - OperationalMode => Same as OperatingMode 

          * 6 - KeySwitchPosition (See spec) 

          * 7 - EngineStatus (See spec) 

          * 8 - BatteryStatus (See spec) 

          * 9 - GeneratorStatus (See spec) 
    EngineStatus:
      type: number
      format: byte
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
        - 17
        - 18
        - 19
        - 20
        - 21
        - 22
      description: >
          * 0 - AbortingStopCycle

          * 1 - AutoModeEngineStartVerification

          * 2 - CheckForReachingOperatingConditions

          * 3 - CoolingCycle 

          * 4 - Crank

          * 5 - DelayBetweenTwoCranks

          * 6 - EngineStartAttempt

          * 7 - EngineStopped

          * 8 - IdleSpeed

          * 9 - ManualModeEngineStartVerification
          
          * 10 - NotStopped
          
          * 11 - OpeningFuelSolenoid
          
          * 12 - Running
          
          * 13 - StandbyBetweenStartAttempts
          
          * 14 - Started
          
          * 15 - StopCycle
          
          * 16 - StopSequenceCompletedButEngineStillRunning
          
          * 17 - StopSequenceHalted
          
          * 18 - StopSequenceRunning
          
          * 19 - Stopp
          
          * 20 - Stopped
          
          * 21 - ValveOpening
          
          * 22 - WaitingForStop
    GeneratorStatus:
      type: number
      format: byte
      enum:
        - 0
        - 1
      description: >
          * 0 - Running

          * 1 - Stopped
    DeviceType:
      type: number
      format: byte
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
        - 16
      description: >
        * 0 - Battery => See BatteryMeasurementType

        * 1 - Engine

        * 2 - PMS

        * 3 - DoorSwitch 

        * 4 - Generator

        * 5 - GeneratorControl

        * 6 - Mains

        * 7 - RoomSensor

        * 8 - Transformer

        * 9 - Vessel
          
        * 10 - CoolingSystem
          
        * 11 - Propulsion
          
        * 12 - Charger
          
        * 13 - DcDc
          
        * 14 - Sterndrive
          
        * 15 - Maneuver
          
        * 16 - Busbar
    BatteryMeasurementType:
      type: number
      format: byte
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
      description: >
        * 0 - StateOfCharge - %

        * 1 - BattStackCurrent - A

        * 2 - Status - string - See BatteryStatus enum

        * 3 - RunningHours1d - hours 

        * 4 - Temperature - deg. C

        * 5 - StateOfHeatlh - %

        * 6 - Voltage - V

        * 7 - ChargeSpeed - ?
    BatteryStatus:
      type: number
      format: byte
      enum:
        - 0
        - 1
        - 2
      description: >
        * 0 - 'Idle'

        * 1 - 'Charging'

        * 2 - 'Discharging'
    GeneratorMeasurementType:
      type: number
      format: byte
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
      description: >
        * 0 - ApparentPowerTotal - kVA

        * 1 - Status - string => see GeneratorStatus enum

        * 2 - AccumulatedApparentPower - kVAh

        * 3 - AccumulatedApparentPower1d - kVAh

        * 4 - ActivePowerTotal - kW

        * 5 - ReactivePowerTotal - kVAr

        * 6 - Frequency - Hz
    EngineMeasurementType:
      type: number
      format: byte
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
      description: >
        * 0 - Status - string => see EngineStatus enum

        * 1 - RunningHours - hours

        * 2 - RunningHours1d - hours

        * 3 - Power - kWm

        * 4 - AveragePower - kWm

        * 5 - RPM - rpm

        * 6 - AverageRpm - rpm

        * 7 - Temperature - deg.C

        * 8 - OilPressure - bar

        * 9 - AccumulatedFuelFlow - liters
          
        * 10 - AccumulatedFuelFlow1d - liters
          
        * 11 - AccumulatedCo2 - kg
          
        * 12 - AccumulatedCo21d - kg
          
        * 13 - FuelFlow - liter/hour